version: 2

references:
  # Ruby実行するdockerを定義
  default_docker_ruby_executor: &default_docker_ruby_executor
    # Docker Hubからプルするプライマリコンテナ、言語イメージ
    image: circleci/ruby:2.5.7-stretch-node-browsers-legacy
    # 必要な環境変数を指定
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      PGHOST: 127.0.0.1
      PGUSER: circleci-demo-ruby
      PGPASSWORD: ""
      RAILS_ENV: test
  # DB(PostgreSQL)のdockerを定義
  postgres: &postgres
    # Alpine Linux 上で実行され、PostgreSQL 9.5 をインストールするサービスイメージ
    image: circleci/postgres:9.5-alpine
    environment:
      POSTGRES_USER: circleci-demo-ruby
      POSTGRES_DB: rails_blog_test
      POSTGRES_PASSWORD: ""

jobs:
  build:
    docker:
      - *default_docker_ruby_executor
    steps:
      # プロジェクトコードを作業ディレクトリにチェックアウトするように CircleCI に指示
      - checkout
      # bundlerのバージョンを確認
      - run:
          name: Which bundler?
          command: bundle -v
      # バンドルのキャッシュを復元
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-
      - run:
          name: Bundler Update
          command: gem install bundler
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      # バンドルのキャッシュを保存
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      # アプリケーションでYarnを他の何らかの方法で使用する場合にのみ必要
      # - restore_cache:
      #     keys:
      #       - rails-demo-yarn-{{ checksum "yarn.lock" }}
      #       - rails-demo-yarn-
      # - run:
      #     name: Yarn Install
      #     command: |
      #       brew install yarn
      #       yarn install --cache-folder ~/.cache/yarn
      # Yarnのキャッシュを保存
      # - save_cache:
      #     key: rails-demo-yarn-{{ checksum "yarn.lock" }}
      #     paths:
      #       - ~/.cache/yarn
  # テストデータベースを設定
  test:
    parallelism: 3
    docker:
      - *default_docker_ruby_executor
      - *postgres
    steps:
      - checkout
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      # - restore_cache:
      #     keys:
      #       - rails-demo-yarn-{{ checksum "yarn.lock" }}
      #       - rails-demo-yarn-
      # dockerizeユーティリティを使用して、データベースサービスが使用可能になるまで待機
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:3001 -timeout 1m
      # DBをセットアップ
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      # RSpecテストを並列実行
      - run:
          command: |
            mkdir /tmp/test-results
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec $TESTFILES --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      # テスト結果を保存
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
